---
  - name: 4.1.1.1 Ensure audit log storage size is configured (Scored)
    shell: grep 'max_log_file = 8' /etc/audit/auditd.conf
    register: out
    failed_when: >
     out.stdout | length == 0
    changed_when: false
    ignore_errors: true

  - name: 4.1.1.2 Ensure system is disabled when audit logs are full (Scored)
    shell: grep space_left_action /etc/audit/auditd.conf;grep action_mail_acct /etc/audit/auditd.conf;grep admin_space_left_action /etc/audit/auditd.conf
    register: out
    failed_when: >
      "space_left_action = email" not in out.stdout or
      "action_mail_acct = root" not in out.stdout or
      "admin_space_left_action = halt" not in out.stdout
    changed_when: false
    ignore_errors: true

  - template:
      src: templates/auditd.conf.j2
      dest: /etc/audit/auditd.conf
      mode: 0640
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation=="YES"

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.1.3 Ensure audit logs are not automatically deleted (Scored)
    shell: grep max_log_file_action /etc/audit/auditd.conf
    register: out
    failed_when: >
      "keep_logs" not in out.stdout
    changed_when: false
    ignore_errors: true

  - template:
      src: templates/auditd.conf.j2
      dest: /etc/audit/auditd.conf
      mode: 0640
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation=="YES"

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.2 Ensure auditd is installed (Scored)
    shell: rpm -q audit audit-libs || dpkg -s auditd audispd-plugins
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      'not installed' in out.stdout 

  - shell: |
         yum install audit audit-libs -y;apt-get install auditd audispd-plugins;zipper install audit audit-libs
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.3 Ensure auditd service is enabled (Scored)
    shell: systemctl is-enabled auditd
    register: out
    failed_when: >
     "enabled" not in out.stdout 
    changed_when: false
    ignore_errors: true

  - shell: |
         chkconfig auditd on;systemctl enable auditd;update-rc.d auditd enable
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.4 Ensure auditing for processes that start prior to auditd is enabled (Scored)
    shell: grep "^\s*linux" /boot/grub*/grub.cfg
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      'audit=1' not in out.stdout 
  
  - lineinfile:
      regexp: "^GRUB_CMDLINE_LINUX="
      line: 'GRUB_CMDLINE_LINUX="audit=1"'
      state: present
      dest: "/etc/default/grub"
      backup: yes
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: "grub2-mkconfig > /boot/grub2/grub.cfg"
    ignore_errors: true
    when: out is failed and remediation == 'YES'
    

  - name: 4.1.5 Ensure events that modify date and time information are collected (Scored)
    shell: grep time-change /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change' not in out.stdout or
      '-a always,exit -F arch=b32 -S clock_settime -k time-change' not in out.stdout or
      '-w /etc/localtime -p wa -k time-change' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'


  - name: 4.1.6 Ensure events that modify user/group information are collected (Scored)
    shell: grep identity /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /etc/group -p wa -k identity' not in out.stdout or
      '-w /etc/passwd -p wa -k identity' not in out.stdout or
      '-w /etc/gshadow -p wa -k identity' not in out.stdout or
      '-w /etc/shadow -p wa -k identity' not in out.stdout or
      '-w /etc/security/opasswd -p wa -k identity' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.7 Ensure events that modify the system's network environment are collected (Scored)
    shell: grep system-locale /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale' not in out.stdout or
      '-w /etc/issue -p wa -k system-locale' not in out.stdout or
      '-w /etc/issue.net -p wa -k system-locale' not in out.stdout or
      '-w /etc/hosts -p wa -k system-locale' not in out.stdout or
      '-w /etc/sysconfig/network -p wa -k system-locale' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.8 Ensure events that modify the system's Mandatory Access Controls are collected (Scored)
    shell: grep MAC-policy /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /etc/selinux/ -p wa -k MAC-policy' not in out.stdout or
      '-w /usr/share/selinux/ -p wa -k MAC-policy' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.9 Ensure login and logout events are collected (Scored)
    shell: grep logins /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /var/log/faillog -p wa -k logins' not in out.stdout or
      '-w /var/log/lastlog -p wa -k logins' not in out.stdout or
      '-w /var/log/tallylog -p wa -k logins' not in out.stdout 

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.10 Ensure session initiation information is collected (Scored)
    shell: grep -E '(session|logins)' /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /var/run/utmp -p wa -k session' not in out.stdout or
      '-w /var/log/wtmp -p wa -k logins' not in out.stdout or
      '-w /var/log/btmp -p wa -k logins' not in out.stdout


  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.11 Ensure discretionary access control permission modification events are collected (Scored)
    shell: grep perm_mod /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod' not in out.stdout or
      '-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod' not in out.stdout or
      '-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod' not in out.stdout 

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.12 Ensure unsuccessful unauthorized file access attempts are collected (Scored)
    shell: grep access /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access' not in out.stdout or
      '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  # - name: 4.1.13 Ensure use of privileged commands is collected (Scored)
  #   shell: find {{section4113}} -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print "-a always,exit -F path=" $1 " -F perm=x -F auid>=500 -F auid!=4294967295 -k privileged" }'
  #   register: out
  #   changed_when: false
  #   ignore_errors: true

  - name: 4.1.14 Ensure successful file system mounts are collected (Scored)
    shell: grep mounts /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.15 Ensure file deletion events by users are collected (Scored)
    shell: grep delete /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'      

  - name: 4.1.16 Ensure changes to system administration scope (sudoers) is collected (Scored)
    shell:  grep scope /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /etc/sudoers -p wa -k scope' not in out.stdout or
      '-w /etc/sudoers.d -p wa -k scope' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.17 Ensure system administrator actions (sudolog) are collected (Scored)
    shell: grep actions /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /var/log/sudo.log -p wa -k actions' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.1.18 Ensure kernel module loading and unloading is collected (Scored)
    shell: grep modules /etc/audit/rules.d/*.rules
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      '-w /sbin/insmod -p x -k modules' not in out.stdout or
      '-w /sbin/rmmod -p x -k modules' not in out.stdout or
      '-w /sbin/modprobe -p x -k modules' not in out.stdout or
      '-a always,exit arch=b32 -S init_module -S delete_module -k modules' not in out.stdout

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'      

  - name: 4.1.19 Ensure the audit configuration is immutable (Scored)
    shell: grep "^-e 2" /etc/audit/rules.d/*.rules
    register: out5218
    changed_when: false
    ignore_errors: true

  - template:
      src: templates/audit.rules.j2
      dest: /etc/audit/rules.d/audit.rules
      mode: 0600
      owner: root
      group: root
      backup: true
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - shell: /usr/sbin/service auditd reload
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.2.1.1 Ensure rsyslog is installed (Scored)
    shell: rpm -q rsyslog || dpkg -s rsyslog
    register: out
    changed_when: false
    ignore_errors: true
    failed_when: >
      'not installed' in out.stdout 

  - shell: |
         yum install rsyslog -y; apt-get install rsyslog;zypper install rsyslog
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.2.1.2 Ensure rsyslog Service is enabled (Scored)
    shell: systemctl is-enabled auditd
    register: out
    failed_when: >
     "enabled" not in out.stdout
    changed_when: false
    ignore_errors: true

  - shell: |
         chkconfig auditd on;systemctl enable auditd;update-rc.d auditd enable
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  # - name: 4.2.1.3 Ensure logging is configured (Not Scored)
  #   shell: ls -l /var/log/ | grep -c log
  #   register: out
  #   failed_when: >
  #    out.stdout!='0' 
  #   changed_when: false
  #   ignore_errors: true

  - name: 4.2.1.4 Ensure rsyslog default file permissions configured (Scored)
    shell: grep ^\$FileCreateMode /etc/rsyslog.conf /etc/rsyslog.d/*.conf
    register: out
    failed_when: >
     '0640' not in out.stdout 
    changed_when: false
    ignore_errors: true

  - lineinfile:
      regexp: "^\\$FileCreateMode\\s+"
      line: "$FileCreateMode 0640"
      insertbefore: BOF
      dest: "/etc/rsyslog.conf"
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  - name: 4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host (Scored)
    shell: grep "^*.*[^I][^I]*@" /etc/rsyslog.conf /etc/rsyslog.d/*.conf
    register: out
    failed_when: >
     out.stdout | length == 0 
    changed_when: false
    ignore_errors: true

  - lineinfile:
      regexp: "^#?\\*\\.\\*\\s+"
      line: "*.* @@{{ rsyslog_remote_loghost_address }}"
      dest: "/etc/rsyslog.conf"
    ignore_errors: true
    when: out is failed and remediation == 'YES'

  # - name: 4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts. (Not Scored)
  #   shell: grep '$ModLoad imtcp' /etc/rsyslog.conf /etc/rsyslog.d/*.conf;grep '$InputTCPServerRun' /etc/rsyslog.conf /etc/rsyslog.d/*.conf
  #   register: out
  #   failed_when: >
  #    'imtcp' not in out.stdout or
  #    '514' not in out.stdout
  #   changed_when: false
  #   ignore_errors: true

  - name: 4.2.2.1 Ensure journald is configured to send logs to rsyslog (Scored)
    shell: grep -e ForwardToSyslog=yes /etc/systemd/journald.conf
    register: out
    failed_when: >
     '#' not in out.stdout and 
     out.stdout | length == 0 
    changed_when: false
    ignore_errors: true

  - name: 4.2.2.2 Ensure journald is configured to compress large log files (Scored)
    shell: grep -e Compress=yes /etc/systemd/journald.conf
    register: out
    failed_when: >
     '#' not in out.stdout and 
     out.stdout | length == 0 
    changed_when: false
    ignore_errors: true

  - name: 4.2.2.3 Ensure journald is configured to write logfiles to persistent disk (Scored)
    shell: grep -e Storage=persistent /etc/systemd/journald.conf
    register: out
    failed_when: >
     '#' not in out.stdout and 
     out.stdout | length == 0 
    changed_when: false
    ignore_errors: true